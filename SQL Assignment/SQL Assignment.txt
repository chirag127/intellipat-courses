-- create table Employee
CREATE TABLE Employee (
    Employee_id int NOT NULL,
    First_name varchar(50) NOT NULL,
    Last_Name varchar(50) NOT NULL,
    Salary int NOT NULL,
    Joining_date datetime NOT NULL,
    Department varchar(50) NOT NULL,
    PRIMARY KEY (Employee_id)
);
-- insert data into Employee table
INSERT INTO Employee
VALUES (
        1,
        'Anika',
        'Arora',
        100000,
        '2020-02-14 9:00:00',
        'HR'
    ),
    (
        2,
        'Veena',
        'Verma',
        80000,
        '2011-06-15 9:00:00',
        'Admin'
    ),
    (
        3,
        'Vishal',
        'Singha!',
        300000,
        '2020-02-16 9:00:00',
        'HR'
    ),
    (
        4,
        'Sushanth',
        'Singh',
        500000,
        '2020-02-17 9:00:00',
        'Admin'
    ),
    (
        5,
        'Bhupal',
        'Bhati',
        500000,
        '2011-06-18 9:00:00',
        'Admin'
    ),
    (
        6,
        'Dheeraj',
        'Diwan',
        200000,
        '2011-06-19 9:00:00',
        'Account'
    ),
    (
        7,
        'Karan',
        'Kumar',
        75000,
        '2020-01-14 9:00:00',
        'Account'
    ),
    (
        8,
        'Chandrika',
        'Chauhan',
        90000,
        '2011-04-15 9:00:00',
        'Admin'
    );
-- create table Employee Bonus
CREATE TABLE Employee_Bonus (
    Employee_ref_id int NOT NULL,
    Bonus_Amount int NOT NULL,
    Bonus_Date datetime NOT NULL,
    FOREIGN KEY (Employee_ref_id) REFERENCES Employee(Employee_id)
);
-- insert data into Employee Bonus table
INSERT INTO Employee_Bonus
VALUES (1, 5000, '2020-02-16 0:00:00'),
    (2, 3000, '2011-06-16 0:00:00'),
    (3, 4000, '2020-02-16 0:00:00'),
    (1, 4500, '2020-02-16 0:00:00'),
    (2, 3500, '2011-06-16 0:00:00');
-- create table Employee Title
CREATE TABLE Employee_Title (
    Employee_ref_id int NOT NULL,
    Employee_title varchar(50) NOT NULL,
    Affective_Date datetime NOT NULL,
    FOREIGN KEY (Employee_ref_id) REFERENCES Employee(Employee_id)
);
-- insert data into Employee Title table
INSERT INTO Employee_Title
VALUES (1, 'Manager', '2016-02-20 0:00:00'),
    (2, 'Executive', '2016-06-11 0:00:00'),
    (8, 'Executive', '2016-06-11 0:00:00'),
    (5, 'Manager', '2016-06-11 0:00:00'),
    (4, 'Asst. Manager', '2016-06-11 0:00:00'),
    (7, 'Executive', '2016-06-11 0:00:00'),
    (6, 'Lead', '2016-06-11 0:00:00'),
    (3, 'Lead', '2016-06-11 0:00:00');
-- 1 Display the “FIRST_NAME” from Employee table using the alias name as Employee_name.
SELECT First_name AS Employee_name
FROM Employee;
-- 2 Display “LAST NAME” from Employee table in upper case.
SELECT UPPER(Last_Name)
FROM Employee;
-- 3 Display unique values of DEPARTMENT from EMPLOYEE table.
SELECT DISTINCT Department
FROM Employee;
-- 4 Display the first three characters of LAST_NAME from EMPLOYEE table.
SELECT substring(Last_Name, 1, 3)
FROM Employee;
-- 5 Display the unique values of DEPARTMENT from EMPLOYEE table and prints its length.
SELECT DISTINCT Department,
    length(Department)
FROM Employee;
-- 6 Display the FIRST_NAME and LAST_NAME from EMPLOYEE table into a  single column AS FULL_NAME a space char should separate them.
SELECT First_name + ' ' + Last_Name AS FULL_NAME
FROM Employee;
-- 7 DISPLAY all EMPLOYEE details from the employee table  order by FIRST _NAME Ascending.
SELECT *
FROM Employee
ORDER BY First_name;
-- 8. Display all EMPLOYEE details order by FIRST NAME Ascending and DEPARTMENT Descending.
SELECT *
FROM Employee
ORDER BY First_name,
    Department DESC;
-- 9 Display details for EMPLOYEE with the first name as “VEENA” and “KARAN” from EMPLOYEE table.
SELECT *
FROM Employee
WHERE First_name IN ('Veena', 'Karan');
-- 10 Display details of EMPLOYEE with DEPARTMENT name as “Admin”.
SELECT *
FROM Employee
WHERE Department = 'Admin';
-- 11 DISPLAY details of the EMPLOYEES whose FIRST_NAME contains ‘V’.
SELECT *
FROM Employee
WHERE First_name LIKE '%V%';
-- 12 DISPLAY details of the EMPLOYEES whose SALARY lies between 100000 and 500000.
SELECT *
FROM Employee
WHERE Salary BETWEEN 100000 AND 500000;
-- 13 Display details of the employees who have joined in Feb-2020.
SELECT *
FROM Employee
WHERE Joining_date BETWEEN '2020-02-01 0:00:00' AND '2020-02-29 0:00:00';
-- 14 Display employee names with salaries >= 50000 and <= 100000.
SELECT First_name,
    Last_name,
    Salary
FROM Employee
WHERE Salary BETWEEN 50000 AND 100000;
-- 16 DISPLAY details of the EMPLOYEES who are also Managers.
SELECT *
FROM Employee E
    INNER JOIN Employee_Title T ON E.Employee_id = T.Employee_ref_id
WHERE T.Employee_title = 'Manager';
-- 17 DISPLAY duplicate records having matching data in some fields of a table.
SELECT *
FROM Employee
GROUP BY First_name,
    Last_name,
    Salary,
    Joining_date,
    Department
HAVING COUNT(*) > 1;
-- 18 Display only odd rows from a table.
SELECT *
FROM Employee
WHERE Employee_id % 2 = 1;
-- 19 Clone a new table from EMPLOYEE table.
CREATE TABLE Employee_Clone select * from Employee;

-- 20 DISPLAY the TOP 2 highest salary from a table.
SELECT TOP 2 *
FROM Employee
ORDER BY Salary DESC;

-- 21. DISPLAY the list of employees with the same salary.
SELECT *
FROM Employee
GROUP BY Salary
HAVING COUNT(*) > 1;
-- 22 Display the second highest salary from a table.
SELECT *
FROM Employee
WHERE Salary = (SELECT MAX(Salary)
    FROM Employee
    WHERE Salary NOT IN (SELECT MAX(Salary)
        FROM Employee));
-- 23 Display the first 50% records from a table.
SELECT TOP 50 PERCENT *
FROM Employee;


-- 24. Display the departments that have less than 4 people in it.
SELECT Department,
    COUNT(*) AS Count
FROM Employee
GROUP BY Department
HAVING COUNT(*) < 4;
-- 25. Display all departments along with the number of people in there.
SELECT Department,
    COUNT(*) AS Count
FROM Employee
GROUP BY Department;
-- 26 Display the name of employees having the highest salary in each
-- department.
SELECT e.First_name,
    e.Last_name,
    e.Department,
    e.Salary
FROM Employee e
WHERE e.Salary = (
        SELECT MAX(Salary)
        FROM Employee
        WHERE Department = e.Department
    );
-- 27 Display the names of employees who earn the highest salary.
SELECT e.First_name,
    e.Last_name,
    e.Salary
FROM Employee e
WHERE e.Salary = (
        SELECT MAX(Salary)
        FROM Employee
    );
-- 28 Diplay the average salaries for each department
SELECT Department,
    AVG(Salary) AS Average_Salary
FROM Employee
GROUP BY Department;
-- 29 display the name of the employee who has got maximum bonus
SELECT e.First_name,
    e.Last_name,
    e.Salary,
    eb.Bonus_Amount
FROM Employee e
    INNER JOIN Employee_Bonus eb ON e.Employee_id = eb.Employee_ref_id
WHERE eb.Bonus_Amount = (
        SELECT MAX(Bonus_Amount)
        FROM Employee_Bonus
    );
-- 30 Display the first name and title of all the employees
SELECT e.First_name,
    et.Employee_title
FROM Employee e
    INNER JOIN Employee_Title et ON e.Employee_id = et.Employee_ref_id;
